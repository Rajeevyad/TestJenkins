node
{
    stage 'GitHub'
	def app
    try 
    {
        echo 'Getting data from Github.........'
        git 'https://github.com/Rajeevyad/TestJenkins.git'
      
    } catch (err) {
        echo "Caught: ${err}"
        currentBuild.result = 'FAILURE'
    }
    
    stage 'Clean'
        powershell '.\\build.ps1 -Target Clean'
        
    stage 'Restore'
        powershell '.\\build.ps1 -Target Restore'   
    
    stage 'NpmInstall'
        powershell '.\\build.ps1 -Target NpmInstall'    
        
    stage 'Build'
        powershell '.\\build.ps1 -Target Build'   
        
    stage 'PublishWeb'
        powershell '.\\build.ps1 -Target PublishWeb'
        
    stage 'Docker'
         powershell '.\\dockercompose.ps1'

	stage('Docker Push')
	{
      agent any
      steps 
	  {
        withCredentials([usernamePassword(credentialsId: "Docker_Hub_Credentials", passwordVariable: "Docker_Hub_CredentialsPassword", usernameVariable: "Docker_Hub_CredentialsUser")]) 
		{
          bat 'docker login -u ${env.Docker_Hub_CredentialsUser} -p ${env.Docker_Hub_CredentialsPassword}'
          bat 'docker push rajeevyad/testjenkins:latest'
        }
      }
	 }
    
    notify('BUILD SUCCESSFUL')     
}


def notify(status)
{
    node
    {
     echo "BuildNumber: ${BUILD_NUMBER} ----JOB NAME: ${JOB_NAME}"
    }
}
