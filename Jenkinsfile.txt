node
{
    stage 'GitHub'	
	 def app
     try 
     {
        echo 'Getting data from Github.........'
        git 'https://github.com/Rajeevyad/TestJenkins.git'
      
     } catch (err) {
        echo "Caught: ${err}"
        currentBuild.result = 'FAILURE'
      }	    
    
        
    stage 'Docker Build'
	 try
	    {
	    echo "Stopping & Removing all container"
        powershell 'docker rm $(docker stop $(docker ps -a -q --filter ancestor=testjenkins --format="{{.ID}}"))'
		} 
        catch (err) {
            echo "Caught: ${err}"
        }

		echo "Removing all container"
		 try
	    {
		 powershell  'docker rmi -f $(docker images testjenkins -q)'
		 } 
        catch (err) {
            echo "Caught: ${err}"
        }  
		
		echo "Check config"
		powershell  'docker-compose -f docker-compose.yml -f docker-compose.override.yml config'

		echo "Build and run docker container"
		powershell  'docker build TestJenkins  --build-arg labelversion=2.0'


	stage('Docker Push')
	try
	{
	    def url = 'https://images.tooling.lm-core-platform.com:443'
		def repository = 'images.tooling.lm-core-platform.com:443'

		echo "TAGGING IMAGES"
		echo "${env.BUILD_NUMBER}"
		bat  "docker tag testjenkins:latest ${repository}/lmproptreatypro/testjenkins:${env.BUILD_NUMBER}"

		withCredentials([usernamePassword(credentialsId: 'Docker_Nexus_Credentials', passwordVariable: 'Docker_Nexus_CredentialsPassword', usernameVariable: 'Docker_Nexus_CredentialsUser')]) 
		{
		  echo "Loggin into NEXUS"
          bat "docker login -u ${env.Docker_Nexus_CredentialsUser} -p ${env.Docker_Nexus_CredentialsPassword}  ${url}"           
        }

		withDockerRegistry([credentialsId: 'Docker_Nexus_Credentials', url: "${url}"]) 
		{
 			bat "docker push ${repository}/lmproptreatypro/testjenkins:${env.BUILD_NUMBER}"
			echo "LOG OUT into NEXUS"
			bat "docker logout ${url}"
		}
     }
	 catch (err) {
        echo "Caught: ${err}"
        currentBuild.result = 'FAILURE'
    }
    
    notify('BUILD SUCCESSFUL')     
}


def notify(status)
{
    node
    {
     echo "BuildNumber: ${BUILD_NUMBER} ----JOB NAME: ${JOB_NAME}"
    }
}
